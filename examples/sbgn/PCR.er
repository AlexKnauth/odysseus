#lang racket

(require "../../sbgn/er.rkt")

(sbgn:er

  ; entities:
  (entity Sense :exist #t :type 'mt:dna)
  (entity Antisense :exist #t :type 'mt:dna)
  (entity Primer-3 :type 'mt:dna)
  (entity Primer-5 :type 'mt:dna)
  ;
  (perturbing-agent Heat)
  ;;
  ;;; relationships:
  (interaction i1 (Sense Primer-3))
  (interaction i2 (Antisense Primer-5))
  (interaction i3 (Sense Antisense))

  ;(absolute-inhibition foo [(or i1 i2) i3])
  (absolute-inhibition (i1 i3))
  (absolute-inhibition (i2 i3))

  (absolute-inhibition (i3 i1))
  (absolute-inhibition (i3 i2))
  (absolute-inhibition (Heat i1))
  (absolute-inhibition (Heat i2))
  (absolute-inhibition (Heat i3))
  ;(necessary-stimulation (i1 assign2))
  ;(necessary-stimulation (i2 assign1))
  ;(assignment assign1 (#t Sense.:exist))
  ;(assignment assign2 (#t Antisense.:exist))

  ; experiment
  (experiment (start Heat))
  (probe i3)
)
